name: Code quality checks and tests
on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
      rust-cache-workspace:
        required: true
        type: string
      rust-cache-key: ## See https://github.com/Swatinem/rust-cache?tab=readme-ov-file#example-usage
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  check-code:
    name: Code checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v3

      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true
          cache-on-failure: true
          workspaces: ${{inputs.rust-cache-workspace}}
          shared-key: ${{inputs.rust-cache-key}}

      - name: Install cargo make
        run: cargo install --force cargo-make
        working-directory: ${{inputs.working-directory}}

      - name: Run rustfmt
        run: cargo make fmt-check
        working-directory: ${{inputs.working-directory}}

      - name: Clippy linting
        run: cargo make clippy-check
        working-directory: ${{inputs.working-directory}}

      - name: Unused deps
        run: cargo make unused-deps
        working-directory: ${{inputs.working-directory}}

  tests:
    needs: check-code
    name: Execute tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v3

      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true
          cache-on-failure: true
          workspaces: ${{inputs.rust-cache-workspace}}
          shared-key: ${{inputs.rust-cache-key}}

      - name: Install cargo make
        run: cargo install --force cargo-make
        working-directory: ${{inputs.working-directory}}

      - name: Tests coverage
        run: |
          cargo make coverage
        working-directory: ${{inputs.working-directory}}
